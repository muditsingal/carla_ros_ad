<!-- -->
<launch>
  <!-- global parameter to set CARLA as time source -->
  <param name="use_sim_time" value="True"/>

  <!-- the network connection for the python connection to CARLA -->
  <arg name='host' default='localhost'/>
  <arg name='port' default='2000'/>
  <arg name='timeout' default='2'/>
  <!-- 
    enable/disable synchronous mode. If enabled ros-bridge waits until
    expected data is received for all sensors
  -->
  <arg name="passive" default='False'/>
  <arg name='synchronous_mode' default='True'/>
  <arg name='synchronous_mode_wait_for_vehicle_control_command' default='False'/>
  <!-- set the fixed timestep length -->
  <arg name='fixed_delta_seconds' default='0.05'/>
  <arg name='town' default='Town03'/>
  <!-- enable/disable the registration of all sensors. If disabled, only sensors
  spawned by the bridge are registered -->
  <arg name='register_all_sensors' default='True'/>
  <!-- 
    the role name of the vehicles that acts as ego vehicle for this ros bridge instance
    Only the vehicles within this list are controllable from within ROS.
    (the vehicle from CARLA is selected which has the attribute 'role_name' set to this value)
  -->
  <arg name='ego_vehicle_role_name' default='["hero", "ego_vehicle", "hero0", "hero1", "hero2", "hero3", "hero4", "hero5", "hero6", "hero7", "hero8", "hero9"]'/>
  
  <arg name="role_name" default="ego_vehicle"/>
  <arg name="objects_definition_file" default='$(find carla_ros_ad)/config/objects.json'/>
  <!-- use comma separated format "x,y,z,roll,pitch,yaw", 
    and parameter name spawn_point_<vehicle_name>. You can add
    as many spawn_point as vehicles defined in objects_definition_file-->
  <!-- <arg name="spawn_point_ego_vehicle" default='390.0,-87.0,0.3,0.0,0.0,90.0'/> -->
  <arg name="spawn_point_ego_vehicle" default=''/>
  <arg name="spawn_sensors_only" default="false"/>

  <arg name="control_id" default="control"/>
      
  <node pkg="carla_ros_bridge" name="carla_ros_bridge" type="bridge.py" output="screen" required="true">
    <param name="host" value="$(arg host)" unless="$(eval host == '')"/>
    <param name="port" value="$(arg port)" unless="$(eval port == '')"/>
    <param name="timeout" value="$(arg timeout)" unless="$(eval timeout == '')"/>
    <param name="passive" value="$(arg passive)"/>
    <param name="synchronous_mode" value="$(arg synchronous_mode)"/>
    <param name="synchronous_mode_wait_for_vehicle_control_command" value="$(arg synchronous_mode_wait_for_vehicle_control_command)"/>
    <param name="fixed_delta_seconds" value="$(arg fixed_delta_seconds)"/>
    <param name="register_all_sensors" value="$(arg register_all_sensors)"/>
    <param name="town" value="$(arg town)"/>
    <param name="ego_vehicle_role_name" value="$(arg ego_vehicle_role_name)"/>
  </node>
  

  <node pkg="carla_spawn_objects" type="carla_spawn_objects.py" name="$(anon carla_spawn_objects)" output="screen">
    <param name="objects_definition_file" value="$(arg objects_definition_file)" />
    <param name="spawn_point_ego_vehicle" value="$(arg spawn_point_ego_vehicle)" />
    <param name="spawn_sensors_only" value="$(arg spawn_sensors_only)" />
  </node>

  <include file="$(find carla_spawn_objects)/launch/set_initial_pose.launch">
    <arg name="role_name" value="$(arg role_name)"/>
    <arg name="control_id" value="$(arg control_id)"/>
  </include>
  
</launch>
